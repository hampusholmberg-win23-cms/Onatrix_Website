@using Umbraco.Cms.Core.PropertyEditors.ValueConverters
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{

    //Content
    var headlineContent = Model.Content.Value<string>("headlineContent");

    //Parameters
    var headingSize = Model.Content.Value<string>("headingSize");
    var textColorLabel = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("textColor")?.Label.ToLower() ?? null;
    var textColorClass = !string.IsNullOrEmpty(textColorLabel) ? $"text-{textColorLabel}" : "";

    //Positioning
    var textAlign = Model?.Content.Value<string>("textAlign");

    //Spacing
    var spacingTopValue = Model?.Content.Value<int>("addSpaceToTop");
    var spacingTopClass = spacingTopValue.ToString() + "rem";

    var spacingBottomValue = Model?.Content.Value<int>("addSpaceToBottom");
    var spacingBottomClass = spacingBottomValue.ToString() + "rem";

    var spacingRightValue = Model?.Content.Value<int>("addSpaceToRight");
    var spacingRightClass = spacingRightValue.ToString() + "rem";

    var spacingLeftValue = Model?.Content.Value<int>("addSpaceToLeft");
    var spacingLeftClass = spacingLeftValue.ToString() + "rem";

    //Typography
    var lineHeight = Model?.Content.Value("lineHeight");

}

@if (!string.IsNullOrEmpty(headlineContent))
{
    <@headingSize class="@textColorClass"
            style="
                text-align: @textAlign;
                line-height: @lineHeight;
                margin: @spacingTopClass @spacingRightClass @spacingBottomClass @spacingLeftClass;
"> 
            
        @headlineContent </>
}
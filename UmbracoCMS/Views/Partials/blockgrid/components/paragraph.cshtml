@using Umbraco.Cms.Core.PropertyEditors.ValueConverters
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
    var paragraphContent = Model.Content.Value<string>("paragraphContent");
    var textAlign = Model.Content.Value<string>("textAlign");

    //Max width
    var maxWidthValue = Model.Content.Value<int>("maxWidth");
    var maxWidth = "";
    if(maxWidthValue != 0)
    {
        maxWidth = maxWidthValue.ToString() + "px";
    }

    //Font size
    var fontSizeValue = Model.Content.Value<int>("fontSize");
    var fontSize = "";
    if (fontSizeValue != 0)
    {
        fontSize = fontSizeValue.ToString() + "px";
    }

    //Font style
    var fontStyle = Model.Content.Value<string>("fontStyle");

    //Colors
    var textColorLabel = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("textColor")?.Label.ToLower() ?? null;
    var textColorClass = !string.IsNullOrEmpty(textColorLabel) ? $"text-{textColorLabel}" : "";

}

@if (!string.IsNullOrEmpty(paragraphContent))
{
    <p class="@textColorClass" 
        style="
            text-align: @textAlign; 
            max-width: @maxWidth;
            font-size: @fontSize;
            font-style: @fontStyle;
            ">
        @paragraphContent
    </p> 
}
